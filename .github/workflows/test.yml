---
# Workflow sets up the database and tests the project.
# .github/workflows/test.yml

name: CI

# trigger on push to the master
on:
  push:
    branches:
      - master

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    # set up influxdb database and flask server
    services:
      influxdb:
        image: influxdb:2
        ports:
          - 8086:8086
      flask:
        image: python:3.9
        ports:
          - 5000:5000

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      # install InfluxDB CLI to authenticate access to the database
      - name: Install InfluxDB CLI
        run: |
          wget https://download.influxdata.com/influxdb/releases/influxdb2-client-2.7.5-linux-amd64.tar.gz
          tar xvzf ./influxdb2-client-2.7.5-linux-amd64.tar.gz
          cp ./influx /usr/local/bin/

      - name: Set up InfluxDB
        id: setup-influx
        run: |

          # default auth data for the test instance
          INFLUX_USERNAME="test-user"
          INFLUX_PASSWORD="test-password"
          INFLUX_ORG="test-org"
          INFLUX_BUCKET="test-bucket"

          # setting up the test instance
          influx setup \
            --username "$INFLUX_USERNAME" \
            --password "$INFLUX_PASSWORD" \
            --org "$INFLUX_ORG" \
            --bucket "$INFLUX_BUCKET" \
            --force

          # save the data required for the token generation and testing
          echo "::set-output name=org::${INFLUX_ORG}"
          echo "::set-output name=bucket::${INFLUX_BUCKET}"

      - name: Generate token for further authentication
        id: auth
        run: |

          INFLUX_TOKEN=$(influx auth create \
            --user "$INFLUX_USERNAME" \
            --org "$INFLUX_ORG" \
            --all-access \
            --description "testing token" \
            --skip-verify \
            --json | jq '.token')

          # save the token
          echo "::set-output name=token::${INFLUX_TOKEN}"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff build twine
          pip install -r requirements.txt

      - name: Check formatting
        run: |
          ruff check

      - name: Test
        run: |-

          # run the falsk dev_server
          export FLASK_APP="tests/dev_server"
          flask run --host=0.0.0.0 --port=9000 &
          sleep 5

          # exporting data required for testing as env variables
          export PYTHONPATH="$PYTHONPATH:$(pwd)"
          export INFLUXDB_HOST="localhost"
          export INFLUXDB_PORT=8086
          export INFLUXDB_TOKEN=${{steps.auth.outputs.token}}
          export INFLUXDB_ORG=${{steps.setup-influx.outputs.org}}
          export INFLUXDB_BUCKET=${{steps.setup-influx.outputs.bucket}}
          pytest
